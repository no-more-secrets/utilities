#!/bin/bash
set -e
set -o pipefail

wifi_interface() {
  iw dev | awk '/^[ \t]+Interface/ { print $2 }'
}

(( $(wifi_interface | wc -l) == 0 )) && {
  echo 1>&2 "error: could not find any WiFi interfaces."
  exit 1
}

if (( $(wifi_interface | wc -l) > 1 )); then
  echo -ne "select wifi interface:"
  interface=$(wifi_interface | fzf)
else
  interface=$(wifi_interface)
fi

echo "using wifi interface: $interface"

get_ip() {
  local interface=$1
  ifconfig $interface \
      | tr '\t' ' '   \
      | sed -nr 's/ *inet ([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+).*/\1/p'
}

ipv4_address=$(get_ip $interface)

[[ "$ipv4_address" =~ ^([0-9]+\.[0-9]+\.[0-9]+)\.[0-9]+$ ]] || {
  echo 1>&2 "error: '$ipv4_address' is not a valid IP address."
  exit 1
}
echo "found ip address: $ipv4_address"

first_three_components=${BASH_REMATCH[1]}
[[ "$first_three_components" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]] || {
  echo 1>&2 "error: '$first_three_components' are not valid initial components of IP address."
  exit 1
}

awk_pgrm='
  {
    $1=""
    $4=""
    print
  }
'

echo "scanning $first_three_components.*:"
echo "-------------------------------------------------------------------"

{
  echo "host ip name - status"
  echo "------- ---------------- ----------------------------- - ------"
  nmap -oG - -sP "$first_three_components.0/24" | grep -v '^#'
} | awk "$awk_pgrm"     \
  | sed 's/()/[blank]/' \
  | tr -d '()'          \
  | column -t -s' '     \
  | sed 's/^/ /'

echo "-------------------------------------------------------------------"

exit $?

# The below alternative will tell nmap to output in XML, then
# will use the xmltodict module to parse the XML and convert it
# to a python dictionary, then will pretty-print the result. If
# you want to run this, apt install python-xmltodict.
xmltodict='
import xmltodict, pprint, json, sys
pp = pprint.PrettyPrinter(indent=4)
print json.dumps( xmltodict.parse( sys.stdin.read() ), indent=4 )
'

nmap -oX - -sP "$first_three_components.0/24" | python -c "$xmltodict"
